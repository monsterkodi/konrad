// koffee 1.14.0

/*
000   000   0000000   000000000   0000000  000   000
000 0 000  000   000     000     000       000   000
000000000  000000000     000     000       000000000
000   000  000   000     000     000       000   000
00     00  000   000     000      0000000  000   000
 */
var Watch, _, args, build, config, klog, kolor, pkg, pretty, ref, runcmd, should, slash, watcher,
    indexOf = [].indexOf;

ref = require('kxk'), _ = ref._, args = ref.args, klog = ref.klog, kolor = ref.kolor, slash = ref.slash;

pretty = require('./pretty');

should = require('./should');

runcmd = require('./runcmd');

config = require('./config');

build = require('./build');

pkg = require('../package.json');

watcher = null;

Watch = function(wlk, opt) {
    var start;
    start = function(cb) {
        var d, pass, ref1, v;
        pass = function(p) {
            var ref1;
            return ref1 = slash.ext(p), indexOf.call(_.keys(opt), ref1) >= 0;
        };
        d = (ref1 = args["arguments"][0]) != null ? ref1 : '.';
        v = kolor.dim.gray(pkg.version + " ‚óè");
        klog(pretty.time(), kolor.gray("üëÅ   " + v + " " + (pretty.filePath(slash.resolve(d), kolor.white))));
        watcher = require('kxk').watch.watch(d, {
            recursive: true,
            ignore: wlk.ignore
        });
        return watcher.on('change', function(info) {
            if (pass(info.path)) {
                return cb(slash.path(info.path));
            }
        });
    };
    return start(function(sourceFile) {
        var o, test;
        sourceFile = slash.resolve(sourceFile);
        o = config.obj(sourceFile, opt);
        test = function(source) {
            if (should('test', o, source)) {
                return runcmd('test', source, config.path('test', slash.resolve(source), opt));
            }
        };
        if (!should('ignore', o, sourceFile)) {
            return build(sourceFile, opt, test);
        } else {
            return test(sourceFile);
        }
    });
};

module.exports = Watch;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2F0Y2guanMiLCJzb3VyY2VSb290IjoiLi4vY29mZmVlIiwic291cmNlcyI6WyJ3YXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7OztBQUFBLElBQUEsNEZBQUE7SUFBQTs7QUFRQSxNQUFrQyxPQUFBLENBQVEsS0FBUixDQUFsQyxFQUFFLFNBQUYsRUFBSyxlQUFMLEVBQVcsZUFBWCxFQUFpQixpQkFBakIsRUFBd0I7O0FBRXhCLE1BQUEsR0FBUyxPQUFBLENBQVEsVUFBUjs7QUFDVCxNQUFBLEdBQVMsT0FBQSxDQUFRLFVBQVI7O0FBQ1QsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSOztBQUNULE1BQUEsR0FBUyxPQUFBLENBQVEsVUFBUjs7QUFDVCxLQUFBLEdBQVMsT0FBQSxDQUFRLFNBQVI7O0FBQ1QsR0FBQSxHQUFTLE9BQUEsQ0FBUSxpQkFBUjs7QUFFVCxPQUFBLEdBQVU7O0FBRVYsS0FBQSxHQUFRLFNBQUMsR0FBRCxFQUFNLEdBQU47QUFJSixRQUFBO0lBQUEsS0FBQSxHQUFRLFNBQUMsRUFBRDtBQUVKLFlBQUE7UUFBQSxJQUFBLEdBQU8sU0FBQyxDQUFEO0FBQU8sZ0JBQUE7MEJBQUEsS0FBSyxDQUFDLEdBQU4sQ0FBVSxDQUFWLENBQUEsRUFBQSxhQUFnQixDQUFDLENBQUMsSUFBRixDQUFPLEdBQVAsQ0FBaEIsRUFBQSxJQUFBO1FBQVA7UUFFUCxDQUFBLGtEQUF3QjtRQUN4QixDQUFBLEdBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxJQUFWLENBQWtCLEdBQUcsQ0FBQyxPQUFMLEdBQWEsSUFBOUI7UUFDSixJQUFBLENBQUssTUFBTSxDQUFDLElBQVAsQ0FBQSxDQUFMLEVBQW9CLEtBQUssQ0FBQyxJQUFOLENBQVcsT0FBQSxHQUFRLENBQVIsR0FBVSxHQUFWLEdBQVksQ0FBQyxNQUFNLENBQUMsUUFBUCxDQUFnQixLQUFLLENBQUMsT0FBTixDQUFjLENBQWQsQ0FBaEIsRUFBa0MsS0FBSyxDQUFDLEtBQXhDLENBQUQsQ0FBdkIsQ0FBcEI7UUFDQSxPQUFBLEdBQVUsT0FBQSxDQUFRLEtBQVIsQ0FBYyxDQUFDLEtBQUssQ0FBQyxLQUFyQixDQUEyQixDQUEzQixFQUE4QjtZQUFBLFNBQUEsRUFBVSxJQUFWO1lBQWdCLE1BQUEsRUFBTyxHQUFHLENBQUMsTUFBM0I7U0FBOUI7ZUFDVixPQUFPLENBQUMsRUFBUixDQUFXLFFBQVgsRUFBb0IsU0FBQyxJQUFEO1lBQ2hCLElBQUcsSUFBQSxDQUFLLElBQUksQ0FBQyxJQUFWLENBQUg7dUJBQXVCLEVBQUEsQ0FBRyxLQUFLLENBQUMsSUFBTixDQUFXLElBQUksQ0FBQyxJQUFoQixDQUFILEVBQXZCOztRQURnQixDQUFwQjtJQVJJO1dBV1IsS0FBQSxDQUFNLFNBQUMsVUFBRDtBQUVGLFlBQUE7UUFBQSxVQUFBLEdBQWEsS0FBSyxDQUFDLE9BQU4sQ0FBYyxVQUFkO1FBQ2IsQ0FBQSxHQUFJLE1BQU0sQ0FBQyxHQUFQLENBQVcsVUFBWCxFQUF1QixHQUF2QjtRQUVKLElBQUEsR0FBTyxTQUFDLE1BQUQ7WUFDSCxJQUFHLE1BQUEsQ0FBTyxNQUFQLEVBQWMsQ0FBZCxFQUFpQixNQUFqQixDQUFIO3VCQUNJLE1BQUEsQ0FBTyxNQUFQLEVBQWMsTUFBZCxFQUFzQixNQUFNLENBQUMsSUFBUCxDQUFZLE1BQVosRUFBbUIsS0FBSyxDQUFDLE9BQU4sQ0FBYyxNQUFkLENBQW5CLEVBQTBDLEdBQTFDLENBQXRCLEVBREo7O1FBREc7UUFJUCxJQUFHLENBQUksTUFBQSxDQUFPLFFBQVAsRUFBZ0IsQ0FBaEIsRUFBbUIsVUFBbkIsQ0FBUDttQkFDSSxLQUFBLENBQU0sVUFBTixFQUFrQixHQUFsQixFQUF1QixJQUF2QixFQURKO1NBQUEsTUFBQTttQkFHSSxJQUFBLENBQUssVUFBTCxFQUhKOztJQVRFLENBQU47QUFmSTs7QUE2QlIsTUFBTSxDQUFDLE9BQVAsR0FBaUIiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbjAwMCAgIDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwMDAgICAwMDAwMDAwICAwMDAgICAwMDBcbjAwMCAwIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgICAwMDAgICAwMDBcbjAwMDAwMDAwMCAgMDAwMDAwMDAwICAgICAwMDAgICAgIDAwMCAgICAgICAwMDAwMDAwMDBcbjAwMCAgIDAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgIDAwMCAgICAgICAwMDAgICAwMDBcbjAwICAgICAwMCAgMDAwICAgMDAwICAgICAwMDAgICAgICAwMDAwMDAwICAwMDAgICAwMDBcbiMjI1xuXG57IF8sIGFyZ3MsIGtsb2csIGtvbG9yLCBzbGFzaCB9ID0gcmVxdWlyZSAna3hrJ1xuXG5wcmV0dHkgPSByZXF1aXJlICcuL3ByZXR0eSdcbnNob3VsZCA9IHJlcXVpcmUgJy4vc2hvdWxkJ1xucnVuY21kID0gcmVxdWlyZSAnLi9ydW5jbWQnXG5jb25maWcgPSByZXF1aXJlICcuL2NvbmZpZydcbmJ1aWxkICA9IHJlcXVpcmUgJy4vYnVpbGQnXG5wa2cgICAgPSByZXF1aXJlICcuLi9wYWNrYWdlLmpzb24nXG5cbndhdGNoZXIgPSBudWxsXG5cbldhdGNoID0gKHdsaywgb3B0KSAtPlxuICAgIFxuICAgICMga2xvZyAnd2F0Y2gnIHdsaywgb3B0XG4gICAgXG4gICAgc3RhcnQgPSAoY2IpIC0+XG5cbiAgICAgICAgcGFzcyA9IChwKSAtPiBzbGFzaC5leHQocCkgaW4gXy5rZXlzKG9wdClcblxuICAgICAgICBkID0gYXJncy5hcmd1bWVudHNbMF0gPyAnLidcbiAgICAgICAgdiA9IGtvbG9yLmRpbS5ncmF5IFwiI3twa2cudmVyc2lvbn0g4pePXCJcbiAgICAgICAga2xvZyBwcmV0dHkudGltZSgpLCBrb2xvci5ncmF5IFwi8J+RgSAgICN7dn0gI3twcmV0dHkuZmlsZVBhdGggc2xhc2gucmVzb2x2ZShkKSwga29sb3Iud2hpdGV9XCJcbiAgICAgICAgd2F0Y2hlciA9IHJlcXVpcmUoJ2t4aycpLndhdGNoLndhdGNoIGQsIHJlY3Vyc2l2ZTp0cnVlLCBpZ25vcmU6d2xrLmlnbm9yZVxuICAgICAgICB3YXRjaGVyLm9uICdjaGFuZ2UnIChpbmZvKSAtPiBcbiAgICAgICAgICAgIGlmIHBhc3MgaW5mby5wYXRoIHRoZW4gY2Igc2xhc2gucGF0aCBpbmZvLnBhdGhcblxuICAgIHN0YXJ0IChzb3VyY2VGaWxlKSAtPlxuXG4gICAgICAgIHNvdXJjZUZpbGUgPSBzbGFzaC5yZXNvbHZlIHNvdXJjZUZpbGVcbiAgICAgICAgbyA9IGNvbmZpZy5vYmogc291cmNlRmlsZSwgb3B0XG5cbiAgICAgICAgdGVzdCA9IChzb3VyY2UpIC0+XG4gICAgICAgICAgICBpZiBzaG91bGQgJ3Rlc3QnIG8sIHNvdXJjZVxuICAgICAgICAgICAgICAgIHJ1bmNtZCAndGVzdCcgc291cmNlLCBjb25maWcucGF0aCAndGVzdCcgc2xhc2gucmVzb2x2ZShzb3VyY2UpLCBvcHRcblxuICAgICAgICBpZiBub3Qgc2hvdWxkICdpZ25vcmUnIG8sIHNvdXJjZUZpbGVcbiAgICAgICAgICAgIGJ1aWxkIHNvdXJjZUZpbGUsIG9wdCwgdGVzdFxuICAgICAgICBlbHNlXG4gICAgICAgICAgICB0ZXN0IHNvdXJjZUZpbGVcblxubW9kdWxlLmV4cG9ydHMgPSBXYXRjaFxuIl19
//# sourceURL=../coffee/watch.coffee